
Jenkins using Command Line
Backup and Restore
Auth and Authrization
==============================
Jenkins - Demo - 3 Topics
SonarQube
Jmeter
Jacoco

Selenium
DevSecOps
+++


http://65.0.138.234:8080/
devops
devops123

Jenkins using Command Line
==========================
API 
http://65.0.138.234:8080/job/RajeshK/job/job1/api/
http://65.0.138.234:8080/job/RajeshK/job/job1/30/api/xml
http://65.0.138.234:8080/job/RajeshK/job/job1/30/api/python?pretty=true
http://65.0.138.234:8080/job/RajeshK/job/job1/30/api/json?pretty=true

Command
java -jar jenkins-cli.jar -s http://65.0.138.234:8080/ -webSocket help


C:\Users\Rajesh Kumar\Desktop\DevSecOps>java -jar jenkins-cli.jar -s http://65.0.138.234:8080/ -webSocket help

ERROR: You must authenticate to access this Jenkins.
Jenkins CLI
Usage: java -jar jenkins-cli.jar [-s URL] command [opts...] args...
Options:
 -s URL              : the server URL (defaults to the JENKINS_URL env var)
 -http               : use a plain CLI protocol over HTTP(S) (the default; mutually exclusive with -ssh)
 -webSocket          : like -http but using WebSocket (works better with most reverse proxies)
 -ssh                : use SSH protocol (requires -user; SSH port must be open on server, and user must have registered a public key)
 -i KEY              : SSH private key file used for authentication (for use with -ssh)
 -noCertificateCheck : bypass HTTPS certificate check entirely. Use with caution
 -noKeyAuth          : don't try to load the SSH authentication private key. Conflicts with -i
 -user               : specify user (for use with -ssh)
 -strictHostKey      : request strict host key checking (for use with -ssh)
 -logger FINE        : enable detailed logging from the client
 -auth [ USER:SECRET | @FILE ] : specify username and either password or API token (or load from them both from a file);
                                 for use with -http.
                                 Passing credentials by file is recommended.
                                 See https://jenkins.io/redirect/cli-http-connection-mode for more info and options.
 -bearer [ TOKEN | @FILE ]     : specify authentication using a bearer token (or load the token from file);
                                 for use with -http. Mutually exclusive with -auth.
                                 Passing credentials by file is recommended.

The available commands depend on the server. Run the 'help' command to see the list.


java -jar jenkins-cli.jar -s http://65.0.138.234:8080/ -auth devops:11e32bfc0f5c0f98983d7ebcfa431c59d8 help

java -jar jenkins-cli.jar -s http://65.0.138.234:8080/ -auth devops:11e32bfc0f5c0f98983d7ebcfa431c59d8 delete-job RajeshK/job2

-webSocket 

=================================
Backup and Restore
=================================
What you want to take up backup?
===================================
 - jobs config
 - plugins config
 - users config
 - tools config
============================
	ALL iN XML

	Jenkins Plugins

======================================
SYSTEM
	CPU + RAM + STORAGE + ACCESS

APPS
	Config + logs + BUGS	

DEPENDENDENT
	network + mail server + ldap

========================================================
Authentication and Authorization
=========================================================
Authentication  - How to login to APP jenkins
	

Authorization - Wt you are allowed to do?

================================================================
================================================================
What is SonarQube?
========================================
	Quality Managment Tool
	From SonarSource
	Written in JAVA
	---- WINDOWS - LINUX - ANY
	Need JRE

	What Quality?
	- Code Quality	 === FOCUS
	- Test Quality

	- Platform for
		--- Multiple Rules
		--- Multiple Rules Sets (Quality Profile)
		--- Who - when - where - how - what - Bad Code has been done'		
		--- Historial Reports
		--- Estimantion for Fixing COde Issues
		--- Notifcation
		--- Manage multiple Projects Code Quality
		--- Role Based Access 
		--- MUCH MORE ---- USING Plugins

	Release
		Community - Free
		Developer - 
		Enterprise
		Data Center
		Cloud 

	Support 
		27+ Lang
		https://www.sonarqube.org/features/multi-languages/


Code Quality can be generated by 2 Ways
- Peer Code Review     	- Manual
- Static Code Review	- Automatic  - FOCUS

What are the Static Code Review tools?
---------------------------------------
https://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis

How Static Code Tool works?
===================================
Tool + Rules --->	Code -> REPORTS



Code Quality in SonarQube is divided into 7 AXIS.
=====================================================

Coding standards	—respect coding standards and follow best practices

Potential bugs	—eliminate code violations to prevent vulnerabilities﻿

Documentation and comments	—provide documentation especially for the Public API, the source code

Duplicated code	—isolates and refines duplications, Don't Repeat Yourself

Complexity	—equalizes disproportionate distributed complexity among components; eliminates complexity if possible

Test coverage	—writes unit tests, especially for complex parts of the software

Design and architecture	—minimize dependencies

Security


How SonarQube Works!!! SonarQube Architecture
=====================================================
SonarQube Server					DONE
		WEB - DASHBOARD
			9000 port
			RULES
			Quality Profiles
			Reports of code Quality
			Quality Gate

		DATABASE
			ANY RDBMS - H2 Demo

		Search Engine	
			ElasticSearch

Scanner	
	Jar file
	in the place of Code
	Run on the code
	Apply Rules
	GEnerate reports
	Store in DB
https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/

Code
	Any code of 27 supported lang.
	+
	sonar-properties file
		container
			meta info of the code
				- projectname
				- key
				- src dir
				- version
				- etc.

https://github.com/SonarSource/sonar-scanning-examples
============================================================================================
How to install SonarQube
	--- JRE 11
	--- SonarQube

SOnarQube MUST be run with NON-ROOT user





[centos@ip-172-31-8-247 sonarqube]$ ls -1
bin						- START - STOP Script
conf						- CHANGE CONFIG OF SQ
COPYING
data						- TRIAL H2 DB
elasticsearch					- Search Engine
extensions					- Plugins - in jar
lib						- jar file for SONARQUBE
logs
temp
web						- DASHBOARD



 1  yum install java-1.8.0-openjdk-devel
    2  -s
    3  yum -s
    4  yum install java-1.8.0-openjdk-devel
    5  clear
    6  sudo yum
    7  yum install java-1.8.0-openjdk-devel
    8  sudo s
    9  sudo
   10  yum install java-1.8.0-openjdk-devel
   11  sudo -s
   12  docker run -d jenkins
   13  sudo -s
   14  sudo -s
   15  docker ps
   16  sudo -s
   17  clear
   18  sudo -s
   19  cd
   20  ls
   21  pwd
   22  wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.5.0.37579.zip
   23  clear
   24  lws
   25  ls
   26  unzip sonarqube-8.5.0.37579.zip
   27  yum install unzip -y
   28  sudo yum install unzip -y
   29  clear
   30  ls
   31  unzip sonarqube-8.5.0.37579.zip
   32  clear
   33  ls
   34  mv sonarqube-8.5.0.37579 sonarqube
   35  ls
   36  cd sonarqube
   37  clear
   38  ls
   39  ls -1
   40  clear
   41  ls
   42  cd conf
   43  ls
   44  more sonar.properties
   45  clear
   46  ls
   47  pwd
   48  ls
   49  cd ..
   50  ls
   51  cd bin/
   52  ls
   53  clear
   54  ls
   55  cd linux-x86-64
   56  ls
   57  ./sonar.sh start
   58  ./sonar.sh status
   59  history



http://65.0.138.234:9000/
admin
admin

Scanner


SRC Code


RUN SCANNER ON THE SRC CODE
================================
C:\tools\sonarqube\scanner\sonar-scanner-cli-4.5\bin\sonar-scanner.bat















